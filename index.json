[{"categories":["博客搭建"],"content":"这篇文章主要记录了我个人认为比较常用的Shortcodes","date":"2023-09-06","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/","tags":["hugo"],"title":"LoveIt主题文档 - 实用的 Shortcodes","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/"},{"categories":["博客搭建"],"content":"实用的 Shortcodes ","date":"2023-09-06","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/:0:0","tags":["hugo"],"title":"LoveIt主题文档 - 实用的 Shortcodes","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/"},{"categories":["博客搭建"],"content":"1.link 1.link shortcode 有以下命名参数： href 必选(第一个位置参数)：链接的目标 content 可选 (第二个位置参数)：链接的内容, 默认值是 href 参数的值（支持 Markdown 或者 HTML 格式.*） title 可选(第三个位置参数)：HTML a 标签 的 title 属性, 当悬停在链接上会显示的提示. rel 可选：HTML a 标签 的 rel 补充属性. class可选：HTML a 标签 的 class 属性. 2.一个 link 示例： {{\u003c link \"https://assemble.io\" \u003e}} 或者 {{\u003c link href=\"https://assemble.io\" \u003e}} {{\u003c link \"mailto:contact@revolunet.com\" \u003e}} 或者 {{\u003c link href=\"mailto:contact@revolunet.com\" \u003e}} {{\u003c link \"https://assemble.io\" Assemble \u003e}} 或者 {{\u003c link href=\"https://assemble.io\" content=Assemble \u003e}} 呈现的输出效果如下： https://assemble.io mailto:contact@revolunet.com Assemble 3.一个带有标题的 link 示例： {{\u003c link \"https://github.com/\" GitHub \"Visit Upstage!\" \u003e}} 或者 {{\u003c link href=\"https://github.com/\" content=GitHub title=\"Hello GitHub!\" \u003e}} 呈现的输出效果如下 (将鼠标悬停在链接上，会有一行提示): GitHub ","date":"2023-09-06","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/:1:0","tags":["hugo"],"title":"LoveIt主题文档 - 实用的 Shortcodes","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/"},{"categories":["博客搭建"],"content":"2.image 1.image shortcode 有以下命名参数: src [必需] (第一个位置参数)：图片的 URL. alt [可选] (第二个位置参数)：图片无法显示时的替代文本, 默认值是 src 参数的值（支持 Markdown 或者 HTML 格式） caption [可选] (第三个位置参数)：图片标题（支持 Markdown 或者 HTML 格式） title [可选]：当悬停在图片上会显示的提示 class [可选]：HTML figure 标签的 class 属性 src_s [可选]：图片缩略图的 URL, 用在画廊模式中, 默认值是 src 参数的值. src_l [可选]：高清图片的 URL, 用在画廊模式中, 默认值是 src 参数的值. height [可选]：图片的 height 属性. width [可选]：图片的 width 属性. linked [可选]：图片是否需要被链接, 默认值是 true. rel [可选]：HTML a 标签 的 rel 补充属性, 仅在 linked 属性设置成 true 时有效. 2.一个 image 示例: {{\u003c image src=\"/images/avatar.png\" caption=\"江南烧酒 (`image`)\" src_s=\"/images/avatar.png\" src_l=\"/images/avatar.png\" \u003e}} 呈现的输出效果如下: 江南烧酒 (image) ","date":"2023-09-06","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/:2:0","tags":["hugo"],"title":"LoveIt主题文档 - 实用的 Shortcodes","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/"},{"categories":["博客搭建"],"content":"3.admonition 1.admonition shortcode 支持 12 种 横幅（支持 Markdown 或者 HTML 格式） Note 一个 注意 横幅 Abstract 一个 摘要 横幅 Info 一个 信息 横幅 Tip 一个 技巧 横幅 Success 一个 成功 横幅 Question 一个 问题 横幅 Warning 一个 警告 横幅 Failure 一个 失败 横幅 Danger 一个 危险 横幅 Bug 一个 Bug 横幅 Example 一个 示例 横幅 Quote 一个 引用 横幅 2.admonition shortcode 有以下命名参数： type [可选] (第一个位置参数)：admonition 横幅的类型, 默认值是 note. title [可选] (第二个位置参数)：admonition 横幅的标题, 默认值是 type 参数的值. open [可选] (第三个位置参数)：横幅内容是否默认展开, 默认值是 true. 3.一个 admonition 示例： {{\u003c admonition type=tip title=\"This is a tip\" open=false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 或者 {{\u003c admonition tip \"This is a tip\" false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 呈现的输出效果如下: This is a tip 一个 技巧 横幅 ","date":"2023-09-06","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/:3:0","tags":["hugo"],"title":"LoveIt主题文档 - 实用的 Shortcodes","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/"},{"categories":["博客搭建"],"content":"4.person person shortcode 用来在你的文章中以 h-card 的格式插入个人网站链接 1.person shortcode 有以下命名参数： url [必需] (第一个位置参数)：URL of the personal page name [必需] (第二个位置参数)：Name of the person text [可选] (第三个位置参数)：Text to display as hover tooltip of the link picture [可选] (第四个位置参数)：A picture to use as person’s avatar nick [可选]：Nickame of the person 2.一个 person 示例： {{\u003c person url=\"https://evgenykuznetsov.org\" name=\"Evgeny Kuznetsov\" nick=\"nekr0z\" text=\"author of this shortcode\" picture=\"https://evgenykuznetsov.org/img/avatar.jpg\" \u003e}} 呈现的输出效果为  Evgeny Kuznetsov (nekr0z) ","date":"2023-09-06","objectID":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/:4:0","tags":["hugo"],"title":"LoveIt主题文档 - 实用的 Shortcodes","uri":"/%E4%B8%BB%E9%A2%98%E6%96%87%E6%A1%A3-%E5%AE%9E%E7%94%A8%E7%9A%84-shortcodes/"},{"categories":["博客搭建"],"content":"github+Hugo搭建博客 ","date":"2023-09-04","objectID":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/:0:0","tags":["github","hugo"],"title":"\"github+hugo\" 搭建个人博客网站","uri":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"},{"categories":["博客搭建"],"content":"1.安装 前往Releases · gohugoio/hugo (github.com)下载对应版本的hugo，建议下载扩展版，因为很多主题的内容需要基于扩展版之上才有用，不是扩展版会报错。 将下载好的hugo压缩包解压至指定文件夹中，解压路径中不要出现中文和空格。 将解压出来的hugo.exe的存放路径添加至环境变量。 验证：打开cmd，运行hugo help，如果屏幕输出了hugo相关的命令指导说明安装成功！ ","date":"2023-09-04","objectID":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/:1:0","tags":["github","hugo"],"title":"\"github+hugo\" 搭建个人博客网站","uri":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"},{"categories":["博客搭建"],"content":"2.创建站点 Tip 站点的本质其实就是\"装有很多其它文件夹/文件的\"文件夹 创建站点的指令 $ hugo new site 站点名(比如说:MyBlog) //进入站点 $ cd MyBlog ","date":"2023-09-04","objectID":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/:2:0","tags":["github","hugo"],"title":"\"github+hugo\" 搭建个人博客网站","uri":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"},{"categories":["博客搭建"],"content":"3.设置主题 下载主题：Complete List | Hugo Themes (gohugo.io)，先去挑选一个自己喜欢的主题，然后打开，点击黄色的Downlord按钮，就会跳转到该主题对应的github项目处，然后我们复制该主题github项目对应的https下载网址，然后执行以下操作： # 先进入站点根目录下的themes文件夹中(此前我们已经进入了站点文件夹中，已经处于站点根目录下) $ cd themes # 下载主题对应的github项目到themes文件夹下 $ git clone 主题对应的github项目的https下载路径 对站点根目录下的配置文件(hugo.toml)进行配置： # 原本就有的： baseURL = 'https://example.org/' 我们先进行本地部署，所以这个可以先不修改 languageCode = 'en-us' title = 'My New Hugo Site' # 额外添加的 theme = \"主题名\" # 就是themes文件夹中下载好的主题的文件夹名(比如\"LoveIt\") ","date":"2023-09-04","objectID":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/:3:0","tags":["github","hugo"],"title":"\"github+hugo\" 搭建个人博客网站","uri":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"},{"categories":["博客搭建"],"content":"4.创建文章 # 创建一个about页面 # about.md自动生成到了content/about.md $ hugo new about.md # 创建一个first页面，放到post目录下，方便之后聚合页面 # first.md自动生成到了content/post/first.md $ hugo new post/first.md # 创建的md文件中的内容 +++ date = \"2023-9-3T18:36:54-07:00\" draft = true # 是否为草稿内容 title = \"about\" +++ 正文内容 ","date":"2023-09-04","objectID":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/:4:0","tags":["github","hugo"],"title":"\"github+hugo\" 搭建个人博客网站","uri":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"},{"categories":["博客搭建"],"content":"5.本地启动hugo服务 # --themes=hyde 指定构建网页使用的主题 # --BuildDrafts 指定草稿也会被构建 $ hugo server --themes=hyde --BuildDrafts $ hugo serve -e production --本地服务开启评论系统 # 然后打开其指定的本地网址即可访问博客了 http://localhost:1313/ ","date":"2023-09-04","objectID":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/:5:0","tags":["github","hugo"],"title":"\"github+hugo\" 搭建个人博客网站","uri":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"},{"categories":["博客搭建"],"content":"6.托管到github上 警告：github上使用的博客托管仓库，即：用户名.github.io这个仓库，必须是全新的，如果之间用于其它框架搭建博客需要删除重新创建，建议这样做，否则后期部署可能会出现奇怪的错误 # 在站点根目录下进行操作: # 生成对应的public文件夹，里面装的就是要发布的博客网页(md-\u003ehtml) $ hugo # 进入public文件夹 $ cd public # 将public文件夹作为一个本地git仓库，先初始化本地git仓库 $ git init # 将public问价夹下的所有文件追加到本地仓库 $ git add . # 将上面执行的add操作进行提交 $ git commit -m \"first commit\" # 将本地仓库和远程仓库相互关联 $ git remote add origin https://github.com/xcwccw/xcwccw.github.io.git # 如果关联到错误的地址: $ git remote -v # 查看当前关联的远程仓库地址 $ git remote rm origin # 移除当前关联的远程仓库地址 # 将本地仓库的文件推送到远程仓库进行托管，不行用下面这个 $ git push -u origin master # 强制推送 $ git push -f origin master -- 之后要写了新的博客要更新内容只需要执行以下操作即可(可以写个脚本) $ hugo $ cd public $ git add . $ git commit -m \"first commit\" $ git push -u origin master ","date":"2023-09-04","objectID":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/:6:0","tags":["github","hugo"],"title":"\"github+hugo\" 搭建个人博客网站","uri":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"},{"categories":["博客搭建"],"content":"7.配置评论系统 创建一个公开的 Github 仓库 找到Settings -\u003e General -\u003e Features -\u003e Discussions 勾选，为仓库启动 Discussions 功能 给配置好的仓库安装Giscus，点击GitHub Apps - giscus，点击Install 点击Install后，要选择一个git仓库进行安装 接下来，我们只需到 Giscus 官网获取配置信息，然后将配置信息填到 Hugo 的配置文件中即可。但是由于主题的不同，所以配置文件的填写也不同，这里以 LoveIt 为例。 来到 Giscus 官网；填写你的git仓库名：xcwccw/Giscus；选择页面与嵌入的discussion之间的映射关系为Discussion的标题包含页面的pathname项；选择 Discussion 分类，我们选择 Announcements 类型即可，官方也是这样推荐的，因为这样便于管理；其他选项默认，我们往下滑，找到配置文件，我们要记下data-repo，data-repo-id，data-category，data-category-id，data-mapping这几个值。 打开配置文件config.toml，找到# 评论系统设置的第一个 enable 参量，将其改为 true 找到# giscus comment 评论系统设置,并把其配置按照下面代码块修改。 [params.page.comment.giscus] # 你可以参考官方文档来使用下列配置 enable = true repo = \"\u003cyour_repo\u003e\" repoId = \"\u003cyour_repoId\u003e\" category = \"\u003cyour_category\u003e\" categoryId = \"\u003cyour_categoryId\u003e\" # \u003cyour_repo\u003e 对应官网的 data-repo # \u003cyour_repoId\u003e 对应官网的 data-repo-id # \u003cyour_category\u003e 对应官网的 data-category # \u003cyour_categoryId\u003e 对应官网的 data-category-id # 为空时自动适配当前主题 i18n 配置 lang = \"zh-CN\" mapping = \"\u003cyour_mapping\u003e\" # \u003cyour_mapping\u003e 对应官网的 data-mapping reactionsEnabled = \"1\" emitMetadata = \"0\" inputPosition = \"bottom\" lazyLoading = false lightTheme = \"light\" darkTheme = \"dark_dimmed\" 配置好后,就可以开启 Giscus 评论系统了。 ","date":"2023-09-04","objectID":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/:7:0","tags":["github","hugo"],"title":"\"github+hugo\" 搭建个人博客网站","uri":"/github-hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"}]